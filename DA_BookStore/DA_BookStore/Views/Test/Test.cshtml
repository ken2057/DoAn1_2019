
<!DOCTYPE html>
<html lang="en">
<head>
    <title>Pie Chart Example</title>
    <script src="~/Scripts/jquery-3.3.1.js"></script>
    <script src="~/Scripts/d3.js"></script>
    <script src="~/Scripts/d3.min.js"></script>

    <script src="~/Scripts/dist/timelines-chart.js"></script>
    <script src="~/Scripts/d3.layout.could.js"></script>
    <script src="~/Scripts/d3plus.js"></script>

    <style>
        .circle {
            background-color: blue;
            height: 100%;
            border-radius: 100%;
            text-align: center;
            line-height: 200px;
            font-size: 30px;
        }

            .circle span {
                line-height: normal;
                display: inline-block;
                vertical-align: middle;
                color: white;
                text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.8);
            }
    </style>
</head>
<body>
    <div>
        <svg id="promotion" style="width:100%"></svg>
        <script>
            var data;
            $.ajax({
                url: "/api/graphPromo",
                type: "get",
                dataTyp: "string",
                async: false,
                success: function (result) {
                    data = JSON.parse(result);
                }
            });
            TimelinesChart()('#promotion')
                .zScaleLabel('My Scale Units')
                .zQualitative(true)
                .data(data);
        </script>
    </div>
    <hr />
    <div>
        <svg id="bubble" style="width: 100%"></svg>
        <script>
            var data;
            $.ajax({
                url: "/api/graphHistory",
                type: "get",
                dataTyp: "string",
                async: false,
                success: function (result) {
                    data = JSON.parse(result);
                }
            });

            var diameter = 600;
            var color = d3.scaleOrdinal(d3.schemeDark2);

            var element = document.getElementById('bubble');
            var positionInfo = element.getBoundingClientRect();
            var width = positionInfo.width;

            var bubble = d3.pack(data)
                .size([width, diameter])
                .padding(1.5);
            console.log(bubble);
            var svg = d3.select("#bubble")
                .attr("height", diameter)
                .attr("class", "bubble");

            var nodes = d3.hierarchy(data)
                .sum(function (d) { return d.Count; });
            
            var node = svg.selectAll(".node")
                .data(bubble(nodes).descendants())
                .enter()
                .filter(function (d) {
                    return !d.children
                })
                .append("g")
                .attr("class", "node")
                .attr("transform", function (d) {
                    return "translate(" + d.x+ "," + d.y + ")";
                });

            node.append("title")
                .text(function (d) {
                    return "Tên sách: " + d.data.Name;
                });

            node.append("circle")
                .attr("r", function (d) {
                    return d.r;
                })
                .style("fill", function (d, i) {
                    return color(i);
                });
            //name book
            node.append("text")
                .attr("dy", ".2em")
                .style("text-anchor", "middle")
                .text(function (d) {
                    console.log(d);
                    return d.data.id.substring(0, d.r / 3);
                })
                
                .attr("font-family", "Roboto")
                .attr("font-size", function (d) {
                    return d.r / 5;
                })
                .attr("fill", "white");
            //sl
            node.append("text")
                .attr("dy", "1.3em")
                .style("text-anchor", "middle")
                .text(function (d) {
                    return 'Sl: '+d.data.SoLuong;
                })
                .attr("font-family", "Roboto")
                .attr("font-size", function (d) {
                    return d.r / 5;
                })
                .attr("fill", "white");
            //number 
            node.append("text")
                .attr("dy", "2.3em")
                .style("text-anchor", "middle")
                .text(function (d) {
                    return 'View: '+d.data.Count;
                })
                .attr("font-family", "Roboto")
                .attr("font-size", function (d) {
                    return d.r / 5;
                })
                .attr("fill", "white");

            d3.select(self.frameElement)
                .style("height", diameter + "px");

 
            
        </script>
    </div>
</body>

</html>